#CC		= clang
AR		= ar
RANLIB		= ranlib
GCC		= gcc

DEP_FLAGS	= -MM -MG -MMD

#DEBUGFLG	= -g3
DEBUGFLG	= -g3 -DO_DEBUG

ANSIFLGS	=
#ANSIFLGS	= -ansi -pedantic

OPTFLAGS	= -O0
#OPTFLAGS	= -O9 -march=i686 -ffast-math -funroll-loops -fomit-frame-pointer
#OPTFLAGS	= -O9 -mfpmath=sse -ffast-math -funroll-loops -fomit-frame-pointer
#OPTFLAGS	= -O2
#OPTFLAGS	= -O9 -march=athlon-xp -mfpmath=sse -funroll-loops -ffast-math -malign-double -fomit-frame-pointer
#OPTFLAGS	= -O9 -mfpmath=sse -funroll-loops -ffast-math -malign-double -fomit-frame-pointer
#OPTFLAGS	= -mfpmath=sse -msse

PROFLAGS	= -g3 -pg -fprofile-arcs

CFLAGS		= $(OPTFLAGS) $(DEBUGFLG) $(ANSIFLGS) $(INCLUDE)

LDFLAGS		=

LD		=gcc

PREFIX		=${HOME}/local/Object-0.0.1

TARGETDIR	=target
BINDIR		=$(TARGETDIR)/bin

DEPDIR		=$(TARGETDIR)/deps
DEPENDENCIES	=$(OBJS:%.o=$(DEPDIR)/%.d) $(LIBOBJS:%.o=$(DEPDIR)/%.d)

_LIBOBJS	=$(LIBOBJS:%.o=$(BINDIR)/%.o)

.DEFAULT: all

all::		$(BINS)

clean::
		$(RM) -f $(BINS) $(OBJS) $(_LIBOBJS) $(GEN) $(DEPENDENCIES)

doc::
		doxywizard Doxyfile

%.bin:	%.o $(LIBS)
		$(LD) $(LDFLAGS) $< $(LIBRARIES) -o $@

$(BINDIR)/%.o:		%.c
		mkdir -p $(BINDIR)
		$(CC) $(CFLAGS) -c $< -o $@

$(DEPDIR)/%.d:		%.c
		mkdir -p $(DEPDIR)
		$(GCC) $(CFLAGS) $(DEP_FLAGS) $< -o $@

%.a: ${_LIBOBJS}
		${AR} rc $@ ${_LIBOBJS}
		${RANLIB} $@

%.txt.c:	%.c
		$(CC) $(CFLAGS) -E $< > $(<:.c=.txt.c)

install::	${LIBS} ${BINS}
		install -d ${PREFIX}/include ${PREFIX}/lib ${PREFIX}/bin
		if [ -n "${LIBHDRS}" ]; then install ${LIBHDRS} ${PREFIX}/include; fi
		if [ -n "${LIBS}" ]; then install ${LIBS} ${PREFIX}/lib; fi
		if [ -n "${BINS}" ]; then install ${BINS} ${PREFIX}/bin; fi

ifeq		($(filter clean tar doc, $(MAKECMDGOALS)),)
-include	$(DEPENDENCIES)
endif
