include co2/RefObject
include co2/Collection

interface List, Collection {
	unsigned size ();
	RefObject get (unsigned index);
	RefObject set (unsigned index, RefObject item);
	RefObject add (RefObject item);
	List addAll (List list);
	List merge (List list) {
		List retval = addAll (list);
		if (list is_of RefObject) {
			((RefObject) list).release ();
		} else {
			delete list;
		}
		return retval;
	}

	RefObject removeLast ();

	List map (void (*)(RefObject) fun) {
		int i;
		unsigned length = size ();
		for (i = 0; i < length; i += 1) {
			fun (get (i));
		}
		return self;
	}

	List filter (int (*)(RefObject) fun) {
		int i;
		unsigned length = size ();
		ArrayList result = new ArrayList ();
		for (i = 0; i < length; i += 1) {
			RefObject item = get (i);
			if (fun (item)) {
				result.add (item);
			}
		}
		return result;
	}
}