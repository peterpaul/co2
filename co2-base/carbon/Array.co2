include RefObject
include OutOfMemoryException
include IndexOutOfBoundsException

class Array : RefObject {
	unsigned size;
	RefObject[] data;

	Array (unsigned size) {
		RefObject[] data = calloc (size, sizeof (RefObject));
		if (data == null) {
			throw new OutOfMemoryException ();
		}
		self.data = data;
	}

	~Array () {
		unsigned index;
		for (index = 0; index < size; index += 1) {
			data[index].release ();
		}
	}

	RefObject get (unsigned index) {
		if (index >= size) {
			throw new IndexOutOfBoundsException (index, size);
		}
		return data[index];
	}

	RefObject set (unsigned index, RefObject item) {
		if (index >= size) {
			throw new IndexOutOfBoundsException (index, size);
		}
		if (item) {
			item.retain ();
		}
		if (data[index]) {
			data[index].release ();
		}
		return data[index] = item;
	}

	void resize (unsigned size) {
		unsigned index;
		// TODO release or throw Exception?
		if (size < self.size) {
			for (index = size; index < self.size; index += 1) {
				data[index].release ();
			}
		}
		// reallocate memory
		RefObject[] data = realloc (self.data, sizeof (RefObject));
		if (data == null) {
			throw new OutOfMemoryException ();
		}
		self.data = data;
		// clean
		if (size > self.size) {
			for (index = self.size; index < size; index += 1) {
				data[index] = null;
			}
		}
		self.size = size;
	}

	unsigned length () {
		return size;
	}
}
