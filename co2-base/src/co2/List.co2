/*
 * libco2-base Library with basic datatypes in CO2/carbon
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/RefObject
include co2/Collection
include co2/Iterator

interface List, Collection {
	unsigned size ();
	RefObject get (unsigned index);
	RefObject set (unsigned index, RefObject item);
	RefObject add (RefObject item);

	List addAll (List list);
/*
	{
		Iterator it = list.iterator ();
		while (it.hasNext ()) {
			add (it.getNext ());
		}
		delete it;
		return self;
	}
*/

	List merge (List list) {
		List retval = addAll (list);
		if (list is_of RefObject) {
			((RefObject) list).release ();
		} else {
			delete list;
		}
		return retval;
	}

	RefObject removeLast ();

	List map (void (*)(RefObject) fun) {
		int i;
		unsigned length = size ();
		for (i = 0; i < length; i += 1) {
			fun (get (i));
		}
		return self;
	}

	List filter (int (*)(RefObject) fun) {
		int i;
		unsigned length = size ();
		ArrayList result = new ArrayList ();
		for (i = 0; i < length; i += 1) {
			RefObject item = get (i);
			if (fun (item)) {
				result.add (item);
			}
		}
		return result;
	}
}