/*
 * libco2-base Library with basic datatypes in CO2/carbon
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Array
include co2/List
include co2/Iterable
include co2/ArrayIterator

class ArrayList : Array, List {
	unsigned length;

	ArrayList () {
		super (128);
		length = 0;
	}

	ArrayList.withSize (int size) {
		super (size);
		length = 0;
	}

	void ensure (unsigned size) {
		if (size > self.size) {
			resize (size);
		}
	}

	unsigned size () {
		return length;
	}

	RefObject add(RefObject item) {
		ensure (length + 1);
		set (length, item);
		length += 1;
		return item;
	}

	List addAll(List list) {
		unsigned len = size ();
		unsigned listLen = list.size ();
		ensure (len + listLen);
		unsigned i;
		for (i = 0; i < listLen; i += 1) {
			RefObject item = list.get (i);
			add (item);
		}
		return self;
	}

	RefObject get(unsigned index) {
		return super (index);
	}

	RefObject set(unsigned index, RefObject item) {
		return super (index, item);
	}

	Iterator iterator () {
		return new ArrayIterator (self);
	}

	RefObject removeLast () {
		RefObject item = get (length - 1);
		set (length - 1, null);
		length -= 1;
		return item;
	}
}
