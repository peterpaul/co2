include co2/RefObject
include co2/ReleasePool
include co2/ArrayList
include co2/List
include co2/Iterator

class TestRefObject : RefObject {
	int val;

	TestRefObject (int aVal) {
		super();
		val = aVal;
	}
}

RefObject create(int a) {
	RefObject b = new TestRefObject(a);
	b.retain();
	return b.autoRelease();
}

int mainImpl () {
	new ReleasePool ();
	List list;
	try {
		list = new ArrayList(15);
		((ArrayList) list).retain ();
		int i;
		for (i = 0; i < 15; i += 1) {
			list.add (create (i));
		}

		for (i = 0; i < 15; i += 1) {
			TestRefObject obj = (TestRefObject) list.get (i);
			printf ("%d\n", obj.val);
			if (random () % 2 == 0) {
				list.set (i, null);
			}
		}

		Iterator it = list.iterator ();
		while (it.hasNext ()) {
			TestRefObject obj = (TestRefObject) it.getNext ();
			printf ("--- %d\n", obj.val);
		}
		delete it;


	} catch (IndexOutOfBoundsException e) {
		String message = e.toString ();
		printf ("Caught Exception: %s\n%s", e.class.class_name, message.data);
		delete e;
		return 1;
	} finally {
		((ArrayList) list).release ();
		delete current_release_pool;
	}

	return 0;
}

int main() {
	int result = 0;
	try {
		result = mainImpl ();
	} catch (Exception e) {
		String message = e.toString ();
		printf ("Caught Exception: %s\n%s", e.class.class_name, message.data);
		delete e;
	} finally {
		return result;
	}
}
