/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Expression
include co2/Type

class VarArgExpression : Expression {
	Expression va_arg_expr;
	Type va_arg_type;

	VarArgExpression (Type va_arg_type, Expression va_arg_expr) {
		super ();
		self.va_arg_type = (Type) va_arg_type.retain ();
		self.va_arg_expr = (Expression) va_arg_expr?.retain ();
	}

	~VarArgExpression () {
		va_arg_type.release ();
		va_arg_expr?.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		va_arg_type.accept (visitor);
		va_arg_expr?.accept (visitor);
		visitor.visit (self);
	}

	void type_check () {
		va_arg_type.type_check ();
		va_arg_expr?.type_check ();
		type = (Type) va_arg_type.retain ();
	}

	void generate (FILE *fp) {
		if (va_arg_expr) {
			fprintf (fp, "va_arg("); // TODO add space
			va_arg_expr.generate (fp);
			fprintf (fp, ", ");
			va_arg_type.generate (fp);
			fprintf (fp, ")");
		} else {
			fprintf (fp, "va_arg(ap, "); // TODO add space
			va_arg_type.generate (fp);
			fprintf (fp, ")");
		}
	}
}
