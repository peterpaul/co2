/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/BinaryExpression

class ConditionalBinaryExpression : BinaryExpression {
	void generate (FILE *fp) {
		fprintf (fp, "({");
		operand[0].type.generate (fp);
		fprintf (fp, " __tmp__ = ");
		operand[0].generate(fp);
		fprintf (fp, "; __tmp__ ?");
		switch (operator.type) {
		case '.': {
			ObjectType type = (ObjectType) operand[0].type;
			fprintf (fp, "__tmp__");
			if (type.decl is_of StructDeclaration) {
				fprintf (fp, ".");
			} else 	{
				fprintf (fp, "->");
			}
			operand[1].generate_left (fp, false);
		}
			break;
		case '[':
			fprintf (fp, "__tmp__");
			operator.generate (fp);
			operand[1].generate (fp);
			fprintf (fp, "]");
			break;
		default:
			error (operator, "Unsupported operator '%s' for ConditionalBinraryExpression\n", operator.name.data);
			break;
		}
		fprintf (fp, " : (");
		type.generate (fp);
		fprintf (fp, ") 0;})");
	}
}
