/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/ObjectTypeDeclaration
include co2/Token

class TypeDeclaration : ObjectTypeDeclaration {
	Bool is_struct;
	TypeDeclaration (Token name, Type type, Bool is_struct) {
		super (name);
		self.type = (Type) type.retain ();
		self.is_struct = is_struct;
	}

	void accept (CompileObjectVisitor visitor) {
		current_context?.add (self);
		type.accept (visitor);
		visitor.visit (self);
		current_context?.remove_last ();
	}

	void type_check () {
		type.type_check ();
		if (is_struct) {
			PrimitiveType primitive_type = (PrimitiveType) type;
			Declaration decl = (Declaration) global_scope.lookup (primitive_type.token);
			if (decl) {
				type = (Type) new ObjectType (primitive_type.token, (ObjectTypeDeclaration) decl);
				type.retain ();
				type.type_check ();
				primitive_type.release ();
			}
		}
	}

	Bool is_compatible (ObjectTypeDeclaration other) {
		// TODO do stuff?
		return true;
	}
}
