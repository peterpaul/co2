/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Statement

class CaseStatement : Statement {
	Expression expr;
	RefList statements;

	CaseStatement (Expression expr, RefList statements) {
		super ();
		self.expr = (Expression) expr?.retain ();
		self.statements = (RefList) statements.retain ();
	}

	~CaseStatement () {
		expr?.release ();
		statements.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		expr?.accept (visitor);
		statements.map_args (compileobject_accept, visitor);
		visitor.visit (self);
	}

	void type_check () {
		current_context?.add (self);
		expr?.type_check ();
		statements.map (compileobject_type_check);
		current_context?.remove_last ();
	}

	void generate (FILE *fp) {
		if (expr) {
			fprintf (fp, "case ");
			expr.generate (fp);
			fprintf (fp, " :\n"); // TODO remove space
		} else {
			fprintf (fp, "default:\n");
		}
		statements.map_args (compileobject_generate, fp);
	}
}
