/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/ObjectTypeDeclaration

class StructDeclaration : ObjectTypeDeclaration {
	StructDeclaration (Token name, IScope member_scope, RefList members) {
		super (name);
		self.member_scope = (IScope) member_scope;
		self.members = (RefList) members?.retain ();
	}

	void accept (CompileObjectVisitor visitor) {
		current_context?.add (self);
		members.map_args (compileobject_accept, visitor);
		visitor.visit (self);
		current_context?.remove_last ();
	}

	void type_check () {
		current_context?.add (self);
		members.map (compileobject_type_check);
		current_context?.remove_last ();
	}

	Bool is_compatible (ObjectTypeDeclaration other) {
		StructDeclaration other_decl;
		if (other is_of TypeDeclaration) {
			TypeDeclaration type_decl = (TypeDeclaration) other;
			ObjectType object_type = (ObjectType) type_decl.type;
			other_decl = (StructDeclaration) object_type.decl;
		} else {
			other_decl = (StructDeclaration) other;
		}
		return self == other_decl;
	}
}
