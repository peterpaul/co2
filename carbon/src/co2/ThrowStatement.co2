/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Statement
include co2/Expression
include co2/CatchStatement
include co2/TryStatement
include co2/FinallyStatement

class ThrowStatement : Statement {
	Expression expr;
	CatchStatement catch_context;
	TryStatement try_context;
	FinallyStatement finally_context;

	ThrowStatement (Expression expr) {
		super ();
		self.expr = (Expression) expr.retain ();
	}

	~ThrowStatement () {
		expr.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		expr.accept (visitor);
		visitor.visit (self);
	}

	void type_check () {
		catch_context = (CatchStatement) current_context?.find (CatchStatement.class);
		try_context = (TryStatement) current_context?.find (TryStatement.class);
		finally_context = (FinallyStatement) current_context?.find (FinallyStatement.class);
		expr.type_check ();
	}

	void generate (FILE *fp) {
		if (catch_context) {
			fprintf (fp, "ex_pop ();\n");
			if (try_context.finally_clause && !finally_context) {
				fprintf (fp, "do_finally;\n");
			}
		}
		if (finally_context) {
			fprintf (fp, "ex_pop ();\n");
		}
		fprintf (fp, "throw (1, ");
		expr.generate (fp);
		fprintf (fp, ", __FILE__, __LINE__, __PRETTY_FUNCTION__);\n");
	}
}
