/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/String
include co2/CompileObject
include co2/File

class Token : CompileObject {
	String name;
	File file;
	int type, line;

	Token (char *name, int type, File file, int line) {
		super ();
		self.name = new String ("%s", name);
		self.name.retain ();
		self.type = type;
		self.file = (File) file; // don't retain, this is a weak reference
		self.line = line;
	}

	Token.fromToken (Token token, char * name, int type) {
		super ();
		self.name = new String ("%s", name);
		self.name.retain ();
		self.type = type;
		self.file = token.file; // don't retain, this is a weak reference
		self.line = token.line;
	}

	~Token () {
		name.release ();
	}

	void generate (FILE *fp) {
		name.fprint (fp);
	}
}
