/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Expression
include co2/Type

class SizeExpression : Expression {
	Type param;

	SizeExpression (Type param) {
		super ();
		self.param = (Type) param.retain ();
	}

	~SizeExpression () {
		param.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		param.accept (visitor);
		visitor.visit (self);
	}

	void type_check () {
		param.type_check ();
		Token type_token = param.get_token ();
		Token int_token = new Token.fromToken (type_token, "int", _INT);
		type = new PrimitiveType (int_token);
		type.retain ();
	}

	void generate (FILE *fp) {
		fprintf (fp, "sizeof (");
		param.generate (fp);
		fprintf (fp, ")");
	}
}
