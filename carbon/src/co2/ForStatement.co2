/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Statement
include co2/Expression

class ForStatement : Statement {
	Expression initialization;
	Expression condition;
	Expression iteration;
	Statement body;

	ForStatement (Expression initialization, Expression condition, Expression iteration, Statement body) {
		super ();
		self.initialization = (Expression) initialization?.retain ();
		self.condition = (Expression) condition?.retain ();
		self.iteration = (Expression) iteration?.retain ();
		self.body = (Statement) body?.retain ();
	}

	~ForStatement () {
		initialization?.release ();
		condition?.release ();
		iteration?.release ();
		body?.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		initialization?.accept (visitor);
		condition?.accept (visitor);
		iteration?.accept (visitor);
		body?.accept (visitor);
		visitor.visit (self);
	}

	void type_check () {
		initialization?.type_check ();
		condition?.type_check ();
		iteration?.type_check ();
		body?.type_check ();
	}

	void generate (FILE *fp) {
		fprintf (fp, "for (");
		initialization?.generate (fp);
		fprintf (fp, "; ");
		condition?.generate (fp);
		fprintf (fp, "; ");
		iteration?.generate (fp);
		fprintf (fp, ")\n");
		body?.generate (fp);
	}
}
