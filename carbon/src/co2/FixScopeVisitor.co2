/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/BaseCompileObjectVisitor

class FixScopeVisitor : BaseCompileObjectVisitor {
	FixScopeVisitor () {
		super (null);
		current_context = new Context ();
		current_context.retain ();
	}

	~FixScopeVisitor () {
		current_context.release ();
		current_context = null;
	}

	void visitClassDeclaration (ClassDeclaration decl) {
		if (decl.superclass) {
			Declaration _super_class = decl.scope.lookup (decl.superclass);
			if (_super_class) {
				// TODO raise error when decl != ClassDeclaration
				ClassDeclaration super_class = (ClassDeclaration) _super_class;
				decl.member_scope.set_parent (super_class.member_scope);
			} else {
				error (decl.name, "Could not find super_class: %s\n", decl.superclass.name.data);
			}
		}
	}
}
