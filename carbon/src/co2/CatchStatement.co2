/*
 * carbon Compiler and programming language for libco2
 *
 * Copyright (C) 2011,2012 Peterpaul Taekele Klein Haneveld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include co2/Statement
include co2/IScope
include co2/ArgumentDeclaration

class CatchStatement : Statement {
	IScope scope;
	ArgumentDeclaration argument;
	Statement body;

	CatchStatement (IScope scope, ArgumentDeclaration argument, Statement body) {
		super ();
		self.scope = scope;
		self.argument = (ArgumentDeclaration) argument.retain ();
		self.body = (Statement) body.retain ();
	}

	~CatchStatement () {
		delete scope;
		argument.release ();
		body.release ();
	}

	void accept (CompileObjectVisitor visitor) {
		argument.accept (visitor);
		body.accept (visitor);
		visitor.visit (self);
	}

	void type_check () {
		current_context?.add (self);
		if (!argument.type is_of ObjectType) {
			error (argument.name, "Expected class.\n");
		}
		argument.type_check ();
		body.type_check ();
		current_context?.remove_last ();
	}

	void generate (FILE *fp) {
		body.generate (fp);
	}
}
